import Image from 'next/image'
import { Inter } from 'next/font/google'
import Head from 'next/head';
import { getAllPosts, getAllTags, getNumberOfPages, getNumberOfPagesByTag, getPostsByPage, getPostsByTagAndPage, getPostsForTopPage } from "../../../../../lib/notionAPI";
import { SinglePost } from "../../../../../components/Post/SinglePost";
import Link from 'next/link';
import Pagination from '@/components/Pagination/Pagination';
import Tag from '@/components/Tag/Tag';

const inter = Inter({ subsets: ['latin'] })

export const getStaticPaths = async () => {
  const allTags = await getAllTags();
  let params = [];

  await Promise.all(
    allTags.map((tag: string) => {
      return getNumberOfPagesByTag(tag).then((numberOfPagesByTag: number) => {
        for (let i = 0; i <= numberOfPagesByTag; i++) {
          params.push({ params: { tag: tag, page: i.toString() } });
        }
      });
    })
  );

  // console.log(params);

  return {
    paths: params,
    fallback: "blocking", // can also be true or 'blocking'
  };
};

// SSG (Static Site Generation)
export const getStaticProps = async (context) => {

  const currentPage = context.params?.page; // オプショナルチェイン
  const currentTag: string = context.params?.tag.toString();

  const upperCaseCurrentTag = currentTag.charAt(0).toUpperCase() + currentTag.slice(1);

  const posts = await getPostsByTagAndPage(
    upperCaseCurrentTag,
    parseInt(currentPage.toString(), 10) // Intに変換
  );

  const numberOfPagesByTag = await getNumberOfPagesByTag(upperCaseCurrentTag);

  const allTags = await getAllTags();

  return {
    props: {
      posts,
      numberOfPagesByTag,
      currentTag,
      allTags,
    },
    revalidate: 60, // ISR (Incremental Static Regeneration)
  };
};

const BlogTagPageList = ({ posts, numberOfPagesByTag, currentTag, allTags, }) => { // Propsから分割代入
  return (
    <div className="container w-full h-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">Notion Blog</h1>
        <div>
          <section className='lg:grid grid-cols-2 w-5/6 gap-3 mx-auto'>
            {posts.map((post) => (
              <div key={post.id} className="mx-4">
                <SinglePost
                  title={post.title}
                  description={post.description}
                  date={post.date}
                  tags={post.tags}
                  slug={post.slug}
                  isPaginationPage={true}
                />
              </div>
            ))}
          </section>
          <Pagination numberOfPage={numberOfPagesByTag} tag={currentTag}/>
          <Tag tags={allTags} />
        </div>
      </main>
    </div>
  );
}

export default BlogTagPageList;